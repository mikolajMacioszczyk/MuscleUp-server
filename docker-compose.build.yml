# run me with: docker-compose -f docker-compose.build.yml up --build

# build and push all
# docker build -t ghcr.io/muscle-up-app/apigateway:latest -f ApiGateway/ApiGateway.API/Dockerfile .;docker push ghcr.io/muscle-up-app/apigateway:latest;docker build -t ghcr.io/muscle-up-app/auth:latest -f Auth/Auth.API/Dockerfile .;docker push ghcr.io/muscle-up-app/auth:latest;docker build -t ghcr.io/muscle-up-app/carnets:latest -f Carnets/Carnets.API/Dockerfile .;docker push ghcr.io/muscle-up-app/carnets:latest;docker build -t ghcr.io/muscle-up-app/content:latest -f Content/Dockerfile .;docker push ghcr.io/muscle-up-app/content:latest;docker build -t ghcr.io/muscle-up-app/fitnessclubs:latest -f FitnessClubs/FitnessClubs.API/Dockerfile .;docker push ghcr.io/muscle-up-app/fitnessclubs:latest;docker build -t ghcr.io/muscle-up-app/groups:latest -f Groups/Dockerfile .;docker push ghcr.io/muscle-up-app/groups:latest;docker build -t ghcr.io/muscle-up-app/notifications:latest -f Notifications/Dockerfile .;docker push ghcr.io/muscle-up-app/notifications:latest

version: '3.8'

services:
  postgres:
    image: postgres:14.5
    restart: always
    environment:
      - POSTGRES_PASSWORD=Pa55w0rd
    ports:
      - "5432:5432"
    volumes:
      - ./Database/postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql

  auth:
    build: 
      context: .
      dockerfile: ./Auth/Auth.API/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT
      - JwtSecret
      - ConnectionStrings:DefaultConnection=Server=postgres;Port=5432;Database=Carnets;User Id=postgres;Password=Pa55w0rd;
    depends_on:
      - postgres

  carnets:
    build: 
      context: .
      dockerfile: ./Carnets/Carnets.API/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT
      - JwtSecret
      - ConnectionStrings:DefaultConnection=Server=postgres;Port=5432;Database=Carnets;User Id=postgres;Password=Pa55w0rd;
      - Api:FitnessClubHost=http://fitnessclubs/
    depends_on:
      - postgres

  fitnessclubs:
    build: 
      context: .
      dockerfile: ./FitnessClubs/FitnessClubs.API/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT
      - JwtSecret
      - ConnectionStrings:DefaultConnection=Server=postgres;Port=5432;Database=FitnessClubs;User Id=postgres;Password=Pa55w0rd;
      - Api:AuthHost=http://auth/
    depends_on:
      - postgres

  content:
    build:
      context: .
      dockerfile: ./Content/Dockerfile
    restart: always
    environment:
      - DATASOURCE_PORT=postgres:5432
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=Pa55w0rd
    depends_on:
      - postgres

  groups:
    build:
      context: .
      dockerfile: ./Groups/Dockerfile
    restart: always
    environment:
      - DATASOURCE_PORT=postgres:5432
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=Pa55w0rd
    depends_on:
      - postgres

  notifications:
    build:
      context: .
      dockerfile: ./Notifications/Dockerfile
    restart: always
    environment:
      - DATASOURCE_PORT=postgres:5432
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=Pa55w0rd
    depends_on:
      - postgres

  apigateway:
    build: 
      context: .
      dockerfile: ./ApiGateway/ApiGateway.API/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_URLS=http://+;https://+
    ports:
      - "8080:80"
      - "8082:443"
    depends_on:
      - auth
      - carnets
      - fitnessclubs
      - content
      - groups
      - notifications